name: Tag release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: tag-release-main
  cancel-in-progress: false

jobs:
  release-tag:
    # We'll check the latest commit message on main via git and gate steps accordingly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Determine latest commit message on main
        id: check_release_commit
        run: |
          git fetch origin main --prune --depth=1
          latest_msg=$(git log -1 --pretty=%s origin/main)
          echo "Latest commit message: $latest_msg"
          # Strict SemVer: subject must be exactly 'release: vX.Y.Z'
          if echo "$latest_msg" | grep -E '^(release: v)([0-9]+\.[0-9]+\.[0-9]+)$' >/dev/null; then
            version=$(printf '%s\n' "$latest_msg" | sed -nE 's/^release: v([0-9]+\.[0-9]+\.[0-9]+)$/\1/p')
            echo "should_tag=true" >> "$GITHUB_OUTPUT"
            echo "version=$version" >> "$GITHUB_OUTPUT"
            echo "tag=v$version" >> "$GITHUB_OUTPUT"
          else
            echo "should_tag=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Configure git user for tagging
        if: steps.check_release_commit.outputs.should_tag == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fetch tags
        if: steps.check_release_commit.outputs.should_tag == 'true'
        run: git fetch --tags --force --prune

      - name: Create and push tag from commit message
        if: steps.check_release_commit.outputs.should_tag == 'true'
        run: |
          set -euo pipefail
          tag="${{ steps.check_release_commit.outputs.tag }}"
          if [ -z "$tag" ]; then
            echo "Missing tag output; skipping."
            exit 0
          fi
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "Tag $tag already exists; skipping."
            exit 0
          fi

          echo "Creating annotated tag: $tag"
          git tag -a "$tag" -m "release: $tag" origin/main

          echo "Pushing tag: $tag"
          git push origin "$tag"

          echo "✓ Tagged and pushed $tag successfully"
          echo "This should trigger the 'Create GitHub Release from CHANGELOG' workflow"
          echo "Monitor: https://github.com/${{ github.repository }}/actions"

      - name: Verify tag push and provide next steps
        if: steps.check_release_commit.outputs.should_tag == 'true'
        run: |
          tag="${{ steps.check_release_commit.outputs.tag }}"

          echo "=== Tag Creation Summary ==="
          echo "✓ Tag workflow completed"
          echo "✓ Tag: $tag"
          echo "✓ Commit: $(git rev-parse origin/main)"
          echo "✓ Expected next step: gh-release.yml should trigger automatically"
          echo ""
          echo "If gh-release workflow does not run within a few minutes:"
          echo "1. Check repository Actions settings are enabled"
          echo "2. Verify GITHUB_TOKEN has 'contents: write' permission"
          echo "3. Manually trigger: gh workflow run gh-release.yml --ref $tag"
          echo "4. Or check: https://github.com/${{ github.repository }}/actions"

      - name: "Skip tagging (message does not match '^release: v')"
        if: steps.check_release_commit.outputs.should_tag != 'true'
        run: |
          echo "Skipping tag: latest commit message does not match '^release: v'"
