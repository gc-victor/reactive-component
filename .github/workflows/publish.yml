name: Publish to npm

on:
  workflow_dispatch:
  release:
    types:
      - published
      - prereleased
      - released

permissions: {}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tarball: ${{ steps.pack.outputs.tarball }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm build

      - name: Set npm version from last tag
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --force --prune 2>/dev/null || true
          last_tag="$(git describe --tags --abbrev=0 2>/dev/null || true)"
          if [ -z "$last_tag" ]; then
            echo "No Git tag found to derive version."
            exit 1
          fi
          version="${last_tag#v}"
          npm version "$version" --git-tag-version=false

      - id: pack
        run: |-
          TARBALL=$(npm pack)
          echo "tarball=$TARBALL" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: tarball
          path: ${{ steps.pack.outputs.tarball }}

  publish:
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      TARBALL: ${{ needs.build.outputs.tarball }}
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: tarball

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24
          package-manager-cache: false

      # Publish prerelease versions with 'next' tag
      - name: Publish prerelease to npm
        run: npm publish --provenance --access public --tag next $TARBALL
        if: github.event.release.prerelease == true
        env:
          TARBALL: ${{ needs.build.outputs.tarball }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publish stable versions to 'latest' tag (default)
      - name: Publish stable to npm
        run: npm publish --provenance --access public $TARBALL
        if: github.event.release.prerelease == false || github.event_name == 'workflow_dispatch'
        env:
          TARBALL: ${{ needs.build.outputs.tarball }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
