name: Publish to npm
permissions: {}
on:
  # Primary trigger: workflow_dispatch from release.yml
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., 1.0.1)"
        required: true
        type: string
      prerelease:
        description: "Is this a prerelease"
        required: true
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24
          cache: npm
      - run: npm ci --ignore-scripts
      - run: npm test
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tarball: ${{ steps.pack.outputs.tarball }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24
          package-manager-cache: false
      - run: npm ci --ignore-scripts
      - run: npm run build
      - name: Extract version number
        id: version
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            # From workflow_dispatch input (already clean version like "1.0.1")
            echo "value=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            # From release event (ref_name like "v1.0.1", strip the "v")
            echo "value=${{ github.ref_name }}" | sed 's/^v//' >> $GITHUB_OUTPUT
          fi
      - run: npm version ${{ steps.version.outputs.value }} --git-tag-version=false
      - id: pack
        run: |-
          TARBALL=$(npm pack)
          echo "tarball=$TARBALL" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: tarball
          path: ${{ steps.pack.outputs.tarball }}
  publish:
    needs:
      - test
      - build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    env:
      TARBALL: ${{ needs.build.outputs.tarball }}
    steps:
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: tarball
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 24
          package-manager-cache: false
      - run: npm publish --provenance --access public --tag next $TARBALL
        if: inputs.prerelease == true || github.event.release.prerelease
        env:
          TARBALL: ${{ needs.build.outputs.tarball }}
      - run: npm publish --provenance --access public $TARBALL
        if: inputs.prerelease == false || (github.event_name == 'release' && !github.event.release.prerelease)
        env:
          TARBALL: ${{ needs.build.outputs.tarball }}
